{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","handleClearAll","setState","input","handleDeleteButton","state","substring","length","handleNumber","num","target","value","handleDecimal","decimal","indexOfOperator","i","operators","lastIndexOf","console","log","includes","handleOperator","operator","substr","handleEqual","result","eval","Math","round","toString","className","href","rel","id","onClick","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc92fe6c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '0',\n      operators: [\"+\", \"-\", \"*\", \"/\"],\n      decimal: \".\"\n    };\n  }\n  //erase all data on the output display\n  handleClearAll = () => {\n    this.setState({\n      input: '0'\n    })\n  }\n  //button to delete the last value\n  handleDeleteButton = () => {\n    this.setState({\n      input: this.state.input.substring(0, this.state.input.length -1),\n    })\n  }\n\n  //button to enter a numeric value\n  handleNumber = (num) => {\n    if (this.state.input === \"0\") {\n      this.setState({\n        input: num.target.value\n      })\n    } else {\n      this.setState({\n        input: this.state.input + num.target.value\n      })\n    }\n  }\n\n  //checks if value from last operator contains a decimal point, if not user may add a decimal\n  //fix if only value is an decimal, console log an error\n  handleDecimal = (decimal) => {\n    let indexOfOperator = -1;\n    for (let i=0; i < this.state.operators.length; i++) {\n      if (this.state.input.lastIndexOf(this.state.operators[i]) !== -1 || this.state.input.lastIndexOf(this.state.operators[i]) >= indexOfOperator) {\n        indexOfOperator = this.state.input.lastIndexOf(this.state.operators[i]);\n      } else {\n        console.log(\"cannot enter this value\")\n      }\n    }\n    if (indexOfOperator === -1 && !this.state.input.includes(this.state.decimal)) {\n      this.setState({\n        input: this.state.input + decimal.target.value\n      })\n    } else if (indexOfOperator !== -1) {\n      if (!this.state.input.substring(indexOfOperator+1).includes(this.state.decimal)) {\n        this.setState({\n          input: this.state.input + decimal.target.value\n        })\n      } else {\n        console.log(\"cannot enter this value\")\n      } \n    } else {\n      console.log(\"cannot enter this value\")\n    }\n  }\n\n  //check if input has a value first, if yes then add an operator\n  //if last input is an operator, replace it with the an operator if pressed.\n  handleOperator = (operator) => {\n    if (this.state.input === \"\" || this.state.input[this.state.input.length-1] === this.state.decimal) {\n      console.log(\"enter a number\")\n    } else if (this.state.operators.includes(this.state.input[this.state.input.length - 1])) {\n      //remove last index value\n      //add new operator to the of the input\n      this.setState({\n        input: this.state.input.substr(0, this.state.input.length -1) + operator.target.value,\n      })\n    } else {\n      this.setState({\n        input: this.state.input + operator.target.value,\n      })\n    }\n  }\n  //check if the last value is not an operator before evaluating\n  // if value is less than 100, only show 4 decimal spaces\n  // if value is less than 10000, only show 2 decimal spaces else show no decimal\n\n  handleEqual = () => {\n    if (!this.state.operators.includes(this.state.input[this.state.input.length - 1]) && this.state.input[this.state.input.length-1] !== this.state.decimal) {\n      // eslint-disable-next-line \n      let result = eval(this.state.input)\n      if (result <= 100) {\n        result = Math.round(result * 10000)/10000;\n        this.setState({\n          input: result.toString(),\n        })\n      } else if (result <= 10000) {\n        result = Math.round(result * 100)/100;\n        this.setState({\n          input: result.toString(),\n        })\n      } else {\n        result = Math.round(result);\n        this.setState({\n          input: result.toString(),\n        })\n      }   \n    } else {\n      console.log(\"enter a valid expression\")\n    }\n  }\n  \n  \n  render() {\n    // changes font size dependent on output length\n    const displayOutput = () => {\n      if (this.state.input.length < 12) {\n        return <p className=\"output-display\">{this.state.input}</p>;\n      } else {\n        return <p className=\"output-display small-display\">{this.state.input}</p>\n      }\n    }\n    return (\n      <div className=\"App\">\n        <h3>Javascript Calculator</h3>\n        <a href=\"https://github.com/ymoua17/jscalculator\" target=\"_blank\"  rel=\"noopener noreferrer\" className=\"link\">**Created by ymoua17**</a>\n        <div id='display'>\n          {displayOutput()}\n        </div>\n        <div className=\"inputs\">\n          <button id=\"clear\" className=\"btn btn-danger lg-btn\" onClick={this.handleClearAll}>AC</button>\n          <button id=\"delete\" className=\"btn btn-light\" onClick={this.handleDeleteButton}>Del</button>\n          <button id=\"divide\" className=\"btn btn-light operator\" value=\"/\" onClick={this.handleOperator}>/</button>\n          <br/>\n          <button id=\"seven\" className=\"btn btn-secondary\" value=\"7\" onClick={this.handleNumber}>7</button>\n          <button id=\"eight\" className=\"btn btn-secondary\" value=\"8\" onClick={this.handleNumber}>8</button>\n          <button id=\"nine\" className=\"btn btn-secondary\" value=\"9\" onClick={this.handleNumber}>9</button>\n          <button id=\"multiply\" className=\"btn btn-light\" value=\"*\" onClick={this.handleOperator}>*</button>\n          <br/>\n          <button id=\"four\" className=\"btn btn-secondary\" value=\"4\" onClick={this.handleNumber}>4</button>\n          <button id=\"five\" className=\"btn btn-secondary\" value=\"5\" onClick={this.handleNumber}>5</button>\n          <button id=\"six\" className=\"btn btn-secondary\" value=\"6\" onClick={this.handleNumber}>6</button>\n          <button id=\"subtract\" className=\"btn btn-light\" value=\"-\" onClick={this.handleOperator}>-</button>\n          <br/>\n          <button id=\"one\" className=\"btn btn-secondary\" value=\"1\" onClick={this.handleNumber}>1</button>\n          <button id=\"two\" className=\"btn btn-secondary\" value=\"2\" onClick={this.handleNumber}>2</button>\n          <button id=\"three\" className=\"btn btn-secondary\" value=\"3\" onClick={this.handleNumber}>3</button>\n          <button id=\"add\" className=\"btn btn-light\" value=\"+\" onClick={this.handleOperator}>+</button>\n          <br/>\n          <button id=\"zero\" className=\"btn btn-secondary lg-btn\" value=\"0\" onClick={this.handleNumber}>0</button>\n          <button id=\"decimal\" className=\"btn btn-secondary\" value=\".\" onClick={this.handleDecimal}>.</button>\n          <button id=\"equals\" className=\"btn btn-success\" onClick={this.handleEqual}>=</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}